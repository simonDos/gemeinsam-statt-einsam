{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/EventsEntry.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/event-list/event-list.component.ts","webpack:///src/app/components/event-list/event-list.component.html","webpack:///src/app/components/plan/plan.component.ts","webpack:///src/app/components/plan/plan.component.html","webpack:///src/app/pipes/date.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","declarations","providers","bootstrap","EventsEntry","name","description","when","link","video","phone","phonepin","DashboardComponent","essen_events","my_events","push","EventListComponent","displayedColumns","PlanComponent","goTo","window","open","DatePipe","timestamp","args","console","log","date","Date","options","weekday","year","month","day","hour","minute","toLocaleTimeString","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'gemeinsam-statt-einsam';\n}\n","<nav>\n  <div class=\"nav-container\">\n    <div class=\"logo-area\">\n      <button mat-button routerLink=\"/\" class=\"logo-img\"><img class=\"logo\" src=\"\"\n                                                                   alt=\"logo\">\n      </button>\n    </div>\n\n    <hr>\n\n    <div style=\"white-space: nowrap;\">gemeinsam statt einsam</div>\n\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations'\nimport {RouterModule, Routes} from '@angular/router'\nimport {HttpClientModule} from '@angular/common/http'\nimport { MatButtonModule } from '@angular/material/button'\nimport {\n  MatButtonToggleModule,\n} from '@angular/material/button-toggle'\n\nimport {\n  MatCardModule,\n} from '@angular/material/card'\n\nimport {\n  MatCheckboxModule,\n} from '@angular/material/checkbox'\n\nimport {\n  MatChipsModule,\n} from '@angular/material/chips'\n\nimport {\n  MatNativeDateModule,\n  MatOptionModule,\n} from '@angular/material/core'\n\nimport {\n  MatDatepickerModule\n} from '@angular/material/datepicker'\n\nimport {\n  MatDialogModule\n} from '@angular/material/dialog'\n\nimport {\n  MatFormFieldModule,\n} from '@angular/material/form-field'\n\nimport {\n  MatGridListModule\n} from '@angular/material/grid-list'\n\nimport {\n  MatIconModule\n} from '@angular/material/icon'\n\nimport {\n  MatInputModule\n} from '@angular/material/input'\n\nimport {\n  MatListModule\n} from '@angular/material/list'\n\nimport {\n  MatProgressBarModule\n} from '@angular/material/progress-bar'\n\nimport {\n  MatProgressSpinnerModule\n} from '@angular/material/progress-spinner'\n\nimport {\n  MatRadioModule\n} from '@angular/material/radio'\n\nimport {\n  MatSelectModule\n} from '@angular/material/select'\n\nimport {\n  MatSidenavModule\n} from '@angular/material/sidenav'\n\nimport {\n  MatSlideToggleModule\n} from '@angular/material/slide-toggle'\n\nimport {\n  MatSliderModule\n} from '@angular/material/slider'\n\nimport {\n  MatSnackBarModule\n} from '@angular/material/snack-bar'\n\nimport {\n  MatStepperModule\n} from '@angular/material/stepper'\n\nimport {\n  MatTableModule\n} from '@angular/material/table'\n\nimport {\n  MatTabsModule\n} from '@angular/material/tabs'\n\nimport {\n  MatTooltipModule\n} from '@angular/material/tooltip'\n\nimport {\n  MatExpansionModule\n} from '@angular/material/expansion';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventListComponent } from './components/event-list/event-list.component';\nimport {DatePipe} from './pipes/date.pipe';\nimport { PlanComponent } from './components/plan/plan.component'\n\n\n\nconst appRoutes: Routes = [\n  {path: '', component: DashboardComponent},\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    EventListComponent,\n    DatePipe,\n    PlanComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatOptionModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatGridListModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatTableModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatRadioModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class EventsEntry {\n  constructor(\n    public name: string,\n    public description: string,\n    public when: number,\n    public link: string,\n    public video: string,\n    public phone: string,\n    public phonepin: string\n  ) {}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { EventsEntry } from \"src/app/classes/EventsEntry\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit {\n  essen_events: EventsEntry[] = []\n\n  my_events: EventsEntry[] = []\n\n  constructor() {\n\n    this.essen_events.push(\n      new EventsEntry(\n        \"Frühstück\",\n        \"Wir frühstücken zusammen! :)\",\n        1584871200,\n        \"chefkoch.de\",\n        \"jitsi.org\",\n        \"+49 1234567890\",\n        \"789 345\"\n      )\n    );\n\n    this.essen_events.push(\n      new EventsEntry(\n        \"Frühstück\",\n        \"Wir frühstücken zusammen! :)\",\n        1584871200,\n        \"chefkoch.de\",\n        \"jitsi.org\",\n        \"+49 1234567890\",\n        \"789 345\"\n      )\n    );\n\n  \n\n    \n\n    this.my_events.push(\n      new EventsEntry(\n        \"Frühstück\",\n        \"Wir frühstücken zusammen! :)\",\n        1584871200,\n        \"chefkoch.de\",\n        \"jitsi.org\",\n        \"+49 1234567890\",\n        \"789 345\"\n      )\n    );\n\n    this.my_events.push(\n      new EventsEntry(\n        \"Frühstück\",\n        \"Wir frühstücken zusammen! :)\",\n        1584871200,\n        \"chefkoch.de\",\n        \"jitsi.org\",\n        \"+49 1234567890\",\n        \"789 345\"\n      )\n    );\n\n    this.my_events.push(\n      new EventsEntry(\n        \"Frühstück\",\n        \"Wir frühstücken zusammen! :)\",\n        1584871200,\n        \"chefkoch.de\",\n        \"jitsi.org\",\n        \"+49 1234567890\",\n        \"789 345\"\n      )\n    );\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <div style=\"display: flex;\">\n    <div class=\"events\">\n      <mat-card>\n        <mat-card-title>\n          Plane deinen Tag!\n        </mat-card-title>\n\n        <mat-tab-group [animationDuration]=\"0\">\n          <mat-tab label=\"Essen\">\n            <app-event-list [events]=\"essen_events\"></app-event-list>\n          </mat-tab>\n          <mat-tab label=\"Sport\">\n            <app-event-list [events]=\"essen_events\"></app-event-list>\n          </mat-tab>\n          <mat-tab label=\"Unterhaltung\">\n            <app-event-list [events]=\"essen_events\"></app-event-list>\n          </mat-tab>\n          <mat-tab label=\"Achtsamkeit\">\n            <app-event-list [events]=\"essen_events\"></app-event-list>\n          </mat-tab>\n          <mat-tab label=\"Andere\">\n            <app-event-list [events]=\"essen_events\"></app-event-list>\n          </mat-tab>\n        </mat-tab-group>\n      </mat-card>\n    </div>\n\n    <div class=\"plan\">\n      <mat-card>\n        <app-plan [events]=\"my_events\"></app-plan>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport {EventsEntry} from '../../classes/EventsEntry'\n\n\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss']\n})\nexport class EventListComponent implements OnInit {\n\n  @Input() events: EventsEntry[]\n\n  displayedColumns: string[] = ['event', 'when', 'how']\n\n  constructor() { \n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  mat-table\n  matSort\n  [dataSource]=\"events\"\n  matSortActive=\"blockNumber\"\n  matSortDirection=\"desc\"\n  matSortDisableClear\n>\n  <ng-container matColumnDef=\"when\">\n    <th *matHeaderCellDef>Wann?</th>\n    <td mat-cell *matCellDef=\"let e\">\n      {{ e.when | datepipe}}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"event\">\n    <th mat-sort-header=\"event\" *matHeaderCellDef>Was?</th>\n    <td mat-cell *matCellDef=\"let e\">\n      <mat-card-title>\n        {{ e.name }}\n      </mat-card-title>\n      <hr />\n      <mat-card-content>\n        <p>\n          <small\n            ><b>Beschreibung</b> <br />\n            {{ e.description }}</small>\n        </p>\n      </mat-card-content>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"how\">\n    <th *matHeaderCellDef>Wie?</th>\n    <td mat-cell *matCellDef=\"let e\">\n      <p>\n        <small\n          ><b>Link</b> <br />\n          {{ e.link }}</small\n        >\n        <br />\n        <small\n          ><b>Videokonferenz</b> <br />\n          {{ e.video }}</small\n        >\n        <br />\n        <small\n          ><b>Telefon</b> <br />\n          {{ e.phone }}</small\n        ><br /><small>{{ e.phonepin }}</small>\n      </p>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { EventsEntry } from \"src/app/classes/EventsEntry\";\n\n@Component({\n  selector: \"app-plan\",\n  templateUrl: \"./plan.component.html\",\n  styleUrls: [\"./plan.component.scss\"]\n})\nexport class PlanComponent implements OnInit {\n  @Input() events: EventsEntry[];\n\n  constructor(\n\n  ) {}\n\n  ngOnInit(): void { }\n  \n  goTo = (link: string) => {\n    window.open(\"https://\" + link)\n  }\n}\n\n\n","<mat-card-title>\n  Mein Plan\n</mat-card-title>\n\n<mat-list *ngFor=\"let e of events\">\n  <div mat-subheader>{{ e.when | datepipe }}</div>\n  <mat-list-item>\n    <div mat-line>{{ e.name }}</div>\n    <div mat-line><a (click)=goTo(e.link)>{{ e.link }}</a></div>\n    <div mat-line><a (click)=goTo(e.video)>{{ e.video }}</a></div>\n  </mat-list-item>\n  <hr>\n</mat-list>\n","import {Pipe, PipeTransform} from '@angular/core'\nimport { DomSanitizer } from '@angular/platform-browser'\n\n@Pipe({\n  name: 'datepipe'\n})\n\nexport class DatePipe implements PipeTransform {\n\n  transform(timestamp: number, args?: any): any {\n\n    if (!timestamp) {\n      return null\n    }\n\n    console.log(timestamp)\n\n    const date = new Date(timestamp * 1000)\n\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\n    return date.toLocaleTimeString(\"de-DE\", options)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}